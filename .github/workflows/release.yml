
on:
  push:
    tags: "release-v*"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

env:
  IMAGE_NAME: k8s-function

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Setup Go environment
      uses: actions/setup-go@v5.0.2
    
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Build
      run: make
      
    - name: Build installer
      run: make build-installer
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

        #VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
    - name: Build and push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=${{ github.ref_name }}

        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        make docker-build IMG=$IMAGE_ID:$VERSION
        make docker-push IMG=$IMAGE_ID:$VERSION

    #- name: release
      #uses: actions/create-release@v1
      #id: create_release
      #with:
        #draft: false
        #prerelease: false
        #release_name: ${{ github.ref_name }}
        #tag_name: ${{ github.ref }}
        #body_path: CHANGELOG.md

    #- name: Upload install.yaml
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ./dist/install.yaml
    #    asset_name: install.yaml
    #    asset_content_type: text/html